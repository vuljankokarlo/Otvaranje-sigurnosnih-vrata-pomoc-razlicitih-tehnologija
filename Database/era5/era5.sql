-- MySQL Script generated by MySQL Workbench
-- 10/28/18 21:09:23
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`role` (
  `rol_id` INT NOT NULL,
  `rol_name` VARCHAR(45) NOT NULL,
  `rol_company` VARCHAR(45) NULL,
  PRIMARY KEY (`rol_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`user` (
  `usr_id` INT NOT NULL AUTO_INCREMENT,
  `usr_name` VARCHAR(45) NULL,
  `usr_surname` VARCHAR(45) NULL,
  `usr_email` VARCHAR(45) NULL,
  `usr_activity` TINYINT NOT NULL,
  `usr_password` VARCHAR(45) NOT NULL,
  `usr_crypted_password` VARCHAR(100) NULL,
  `usr_rol_id` INT NOT NULL,
  PRIMARY KEY (`usr_id`),
  INDEX `fk_user_user_type_idx` (`usr_rol_id` ASC),
  CONSTRAINT `fk_user_user_type`
    FOREIGN KEY (`usr_rol_id`)
    REFERENCES `mydb`.`role` (`rol_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`object_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`object_type` (
  `obt_id` INT NOT NULL,
  `obt_name` VARCHAR(45) NOT NULL,
  `in` TINYINT NULL,
  `out` TINYINT NULL,
  PRIMARY KEY (`obt_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`object`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`object` (
  `obj_id` INT NOT NULL,
  `obj_name` VARCHAR(45) NOT NULL,
  `obj_open` TINYINT NULL,
  `obj_auto` TINYINT NULL,
  `obj_GPS` VARCHAR(100) NULL,
  `obj_obt_type_id` INT NOT NULL,
  PRIMARY KEY (`obj_id`),
  INDEX `fk_objects_object_type1_idx` (`obj_obt_type_id` ASC),
  CONSTRAINT `fk_objects_object_type1`
    FOREIGN KEY (`obj_obt_type_id`)
    REFERENCES `mydb`.`object_type` (`obt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`period_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`period_type` (
  `per_id` INT NOT NULL,
  `per_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`per_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`access_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`access_type` (
  `act_id` INT NOT NULL,
  `act_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`act_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`count_limit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`count_limit` (
  `con_id` INT NOT NULL,
  `con_max_count` INT NOT NULL,
  PRIMARY KEY (`con_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`profil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`profil` (
  `pro_id` INT NOT NULL,
  `pro_name` VARCHAR(45) NOT NULL,
  `pro_per_id` INT NULL,
  `pro_act_id` INT NULL,
  `pro_con_id` INT NULL,
  PRIMARY KEY (`pro_id`),
  INDEX `fk_profil_period_type1_idx` (`pro_per_id` ASC),
  INDEX `fk_profil_access_type1_idx` (`pro_act_id` ASC),
  INDEX `fk_profil_count_limit1_idx` (`pro_con_id` ASC),
  CONSTRAINT `fk_profil_period_type1`
    FOREIGN KEY (`pro_per_id`)
    REFERENCES `mydb`.`period_type` (`per_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profil_access_type1`
    FOREIGN KEY (`pro_act_id`)
    REFERENCES `mydb`.`access_type` (`act_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_profil_count_limit1`
    FOREIGN KEY (`pro_con_id`)
    REFERENCES `mydb`.`count_limit` (`con_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`access`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`access` (
  `acs_id` INT NOT NULL,
  `acs_valid_from` DATETIME NOT NULL,
  `acs_valid_to` DATETIME NULL,
  `acs_opening_counter` INT NULL,
  `acs_usr_id` INT NULL,
  `acs_pro_id` INT NULL,
  `acs_obj_id` INT NULL,
  PRIMARY KEY (`acs_id`),
  INDEX `fk_access_user1_idx` (`acs_usr_id` ASC),
  INDEX `fk_access_profiles1_idx` (`acs_pro_id` ASC),
  INDEX `fk_access_object1_idx` (`acs_obj_id` ASC),
  CONSTRAINT `fk_access_user1`
    FOREIGN KEY (`acs_usr_id`)
    REFERENCES `mydb`.`user` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_profiles1`
    FOREIGN KEY (`acs_pro_id`)
    REFERENCES `mydb`.`profil` (`pro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_object1`
    FOREIGN KEY (`acs_obj_id`)
    REFERENCES `mydb`.`object` (`obj_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`event_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`event_type` (
  `evt_id` INT NOT NULL,
  `evt_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`evt_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`event_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`event_log` (
  `evl_id` INT NOT NULL,
  `evl_date` DATETIME NOT NULL,
  `evl_status` TINYINT NOT NULL,
  `evl_trigger` VARCHAR(50) NOT NULL,
  `evl_usr_id` INT NULL,
  `evl_obj_id` INT NOT NULL,
  `evl_evt_id` INT NULL,
  PRIMARY KEY (`evl_id`),
  INDEX `fk_event_log_event_type1_idx` (`evl_evt_id` ASC),
  CONSTRAINT `fk_event_log_event_type1`
    FOREIGN KEY (`evl_evt_id`)
    REFERENCES `mydb`.`event_type` (`evt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`trigger_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`trigger_type` (
  `trt_id` INT NOT NULL,
  `trt_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`trt_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`trigger`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`trigger` (
  `trg_usr_id` INT NULL,
  `trg_cat_id` INT NULL,
  `trg_value` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`trg_usr_id`, `trg_cat_id`),
  INDEX `fk_user_has_category_category1_idx` (`trg_cat_id` ASC),
  INDEX `fk_user_has_category_user1_idx` (`trg_usr_id` ASC),
  CONSTRAINT `fk_user_has_category_user1`
    FOREIGN KEY (`trg_usr_id`)
    REFERENCES `mydb`.`user` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_category_category1`
    FOREIGN KEY (`trg_cat_id`)
    REFERENCES `mydb`.`trigger_type` (`trt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`date_dim`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`date_dim` (
  `dat_id` INT NOT NULL,
  `dat_date` DATETIME NULL,
  `dat_day_no` INT NULL,
  `dat_day_name` VARCHAR(45) NULL,
  `dat_month_no` INT NULL,
  `dat_month_name` VARCHAR(45) NULL,
  PRIMARY KEY (`dat_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`nubmers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`nubmers` (
  `num_id` INT NOT NULL,
  `num_value` INT NOT NULL,
  PRIMARY KEY (`num_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`system_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`system_log` (
  `sys_id` INT NOT NULL,
  `sys_usr_id` INT NOT NULL,
  `sys_action` VARCHAR(2000) NOT NULL,
  `sys_text` VARCHAR(45) NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`schedule` (
  `sch_pro_id` INT NOT NULL,
  `sch_dat_id` INT NULL,
  `sch_from_hour` TIME NOT NULL,
  `sch_to_hour` TIME NOT NULL,
  PRIMARY KEY (`sch_pro_id`, `sch_dat_id`),
  INDEX `fk_profil_has_day_time_period1_idx` (`sch_dat_id` ASC),
  INDEX `fk_schedule_profil1_idx` (`sch_pro_id` ASC),
  CONSTRAINT `fk_profil_has_day_time_period1`
    FOREIGN KEY (`sch_dat_id`)
    REFERENCES `mydb`.`date_dim` (`dat_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_schedule_profil1`
    FOREIGN KEY (`sch_pro_id`)
    REFERENCES `mydb`.`profil` (`pro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
