-- MySQL Script generated by MySQL Workbench
-- 11/06/18 14:23:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`ac_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_role` (
  `rol_id` INT NOT NULL AUTO_INCREMENT,
  `rol_name` VARCHAR(45) NOT NULL,
  `rol_company` VARCHAR(45) NULL,
  PRIMARY KEY (`rol_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_user` (
  `usr_id` INT NOT NULL AUTO_INCREMENT,
  `usr_name` VARCHAR(45) NULL,
  `usr_surname` VARCHAR(45) NULL,
  `usr_email` VARCHAR(45) NULL,
  `usr_activity` TINYINT NOT NULL,
  `usr_password_salt` BINARY(64) NOT NULL,
  `usr_crypted_password` BINARY(32) NULL,
  `usr_rol_id` INT NULL,
  PRIMARY KEY (`usr_id`),
  INDEX `fk_user_user_type_idx` (`usr_rol_id` ASC),
  CONSTRAINT `fk_user_user_type`
    FOREIGN KEY (`usr_rol_id`)
    REFERENCES `mydb`.`ac_role` (`rol_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_object_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_object_type` (
  `obt_id` INT NOT NULL AUTO_INCREMENT,
  `obt_name` VARCHAR(45) NOT NULL,
  `obt_in` TINYINT NULL,
  `obt_out` TINYINT NULL,
  PRIMARY KEY (`obt_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_object`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_object` (
  `obj_id` INT NOT NULL AUTO_INCREMENT,
  `obj_name` VARCHAR(45) NOT NULL,
  `obj_open` TINYINT NULL,
  `obj_auto` TINYINT NULL,
  `obj_activity` TINYINT NOT NULL,
  `obj_GPS` VARCHAR(100) NOT NULL,
  `obj_action` VARCHAR(1000) NOT NULL,
  `obj_obt_type_id` INT NOT NULL,
  PRIMARY KEY (`obj_id`),
  INDEX `fk_objects_object_type1_idx` (`obj_obt_type_id` ASC),
  CONSTRAINT `fk_objects_object_type1`
    FOREIGN KEY (`obj_obt_type_id`)
    REFERENCES `mydb`.`ac_object_type` (`obt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_profil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_profil` (
  `pro_id` INT NOT NULL AUTO_INCREMENT,
  `pro_name` VARCHAR(45) NOT NULL,
  `pro_activity` TINYINT NOT NULL,
  PRIMARY KEY (`pro_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_access`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_access` (
  `acs_id` INT NOT NULL AUTO_INCREMENT,
  `acs_valid_from` DATETIME NOT NULL,
  `acs_valid_to` DATETIME NOT NULL,
  `acs_opening_counter` INT NULL,
  `acs_usr_id` INT NULL,
  `acs_pro_id` INT NULL,
  `acs_obj_id` INT NULL,
  PRIMARY KEY (`acs_id`, `acs_valid_to`, `acs_valid_from`),
  INDEX `fk_access_user1_idx` (`acs_usr_id` ASC),
  INDEX `fk_access_profiles1_idx` (`acs_pro_id` ASC),
  INDEX `fk_access_object1_idx` (`acs_obj_id` ASC),
  CONSTRAINT `fk_access_user1`
    FOREIGN KEY (`acs_usr_id`)
    REFERENCES `mydb`.`ac_user` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_profiles1`
    FOREIGN KEY (`acs_pro_id`)
    REFERENCES `mydb`.`ac_profil` (`pro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_access_object1`
    FOREIGN KEY (`acs_obj_id`)
    REFERENCES `mydb`.`ac_object` (`obj_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_event_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_event_status` (
  `evs_id` INT NOT NULL AUTO_INCREMENT,
  `evs_name` VARCHAR(45) NOT NULL,
  `evs_description` VARCHAR(255) NULL,
  PRIMARY KEY (`evs_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_trigger_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_trigger_type` (
  `trt_id` INT NOT NULL AUTO_INCREMENT,
  `trt_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`trt_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_event_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_event_log` (
  `evl_id` INT NOT NULL AUTO_INCREMENT,
  `evl_date` DATETIME NOT NULL,
  `evl_trg_value` VARCHAR(100) NOT NULL,
  `evl_evs_id` INT NOT NULL,
  `evl_obj_id` INT NULL,
  `evl_usr_id` INT NULL,
  `evl_trt_id` INT NOT NULL,
  PRIMARY KEY (`evl_id`),
  INDEX `fk_event_log_event_type1_idx` (`evl_evs_id` ASC),
  INDEX `fk_event_log_object1_idx` (`evl_obj_id` ASC),
  INDEX `fk_event_log_user1_idx` (`evl_usr_id` ASC),
  INDEX `fk_event_log_trigger_type1_idx` (`evl_trt_id` ASC),
  CONSTRAINT `fk_event_log_event_type1`
    FOREIGN KEY (`evl_evs_id`)
    REFERENCES `mydb`.`ac_event_status` (`evs_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_log_object1`
    FOREIGN KEY (`evl_obj_id`)
    REFERENCES `mydb`.`ac_object` (`obj_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_log_user1`
    FOREIGN KEY (`evl_usr_id`)
    REFERENCES `mydb`.`ac_user` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_log_trigger_type1`
    FOREIGN KEY (`evl_trt_id`)
    REFERENCES `mydb`.`ac_trigger_type` (`trt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_trigger`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_trigger` (
  `trg_usr_id` INT NULL,
  `trg_trt_id` INT NULL,
  `trg_value` VARCHAR(1000) NOT NULL,
  `trg_activity` TINYINT NOT NULL,
  PRIMARY KEY (`trg_usr_id`, `trg_trt_id`),
  INDEX `fk_user_has_category_category1_idx` (`trg_trt_id` ASC),
  INDEX `fk_user_has_category_user1_idx` (`trg_usr_id` ASC),
  CONSTRAINT `fk_user_has_category_user1`
    FOREIGN KEY (`trg_usr_id`)
    REFERENCES `mydb`.`ac_user` (`usr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_category_category1`
    FOREIGN KEY (`trg_trt_id`)
    REFERENCES `mydb`.`ac_trigger_type` (`trt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_system_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_system_log` (
  `sys_id` INT NOT NULL AUTO_INCREMENT,
  `sys_usr_id` INT NOT NULL,
  `sys_action` VARCHAR(2000) NOT NULL,
  `sys_text` VARCHAR(45) NULL,
  PRIMARY KEY (`sys_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_day`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_day` (
  `day_id` INT NOT NULL AUTO_INCREMENT,
  `day_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`day_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_schedule` (
  `sch_pro_id` INT NULL,
  `sch_day_id` INT NULL,
  `sch_time_from` TIME NOT NULL,
  `sch_time_to` TIME NOT NULL,
  PRIMARY KEY (`sch_pro_id`, `sch_day_id`),
  INDEX `fk_schedule_profil1_idx` (`sch_pro_id` ASC),
  INDEX `fk_schedule_day1_idx` (`sch_day_id` ASC),
  CONSTRAINT `fk_schedule_profil1`
    FOREIGN KEY (`sch_pro_id`)
    REFERENCES `mydb`.`ac_profil` (`pro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_schedule_day1`
    FOREIGN KEY (`sch_day_id`)
    REFERENCES `mydb`.`ac_day` (`day_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_object_has_trigger_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_object_has_trigger_type` (
  `oht_trt_id` INT NULL,
  `oht_obj_id` INT NULL,
  `oht_activity` TINYINT NOT NULL,
  PRIMARY KEY (`oht_trt_id`, `oht_obj_id`),
  INDEX `fk_trigger_type_has_object_object1_idx` (`oht_obj_id` ASC),
  INDEX `fk_trigger_type_has_object_trigger_type1_idx` (`oht_trt_id` ASC),
  CONSTRAINT `fk_trigger_type_has_object_trigger_type1`
    FOREIGN KEY (`oht_trt_id`)
    REFERENCES `mydb`.`ac_trigger_type` (`trt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trigger_type_has_object_object1`
    FOREIGN KEY (`oht_obj_id`)
    REFERENCES `mydb`.`ac_object` (`obj_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ac_date`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ac_date` (
  `dat_id` INT NOT NULL AUTO_INCREMENT,
  `dat_date_from` DATETIME NOT NULL,
  `dat_date_to` DATETIME NOT NULL,
  `dat_enabled` TINYINT NOT NULL,
  `dat_pro_id` INT NOT NULL,
  PRIMARY KEY (`dat_id`),
  INDEX `fk_date_profil1_idx` (`dat_pro_id` ASC),
  CONSTRAINT `fk_date_profil1`
    FOREIGN KEY (`dat_pro_id`)
    REFERENCES `mydb`.`ac_profil` (`pro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
